#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.4 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 32 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 63 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 0 1
#"\0"
0 75 6 #"Menlo\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1           0 6172 0 28 3 16 #"#lang plai-typed"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 7          85 4           0 0           0 13 0 17 3 23
#";Grammar for operations"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";;; S1 = {+, -, *, **}"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;; S2 = [0-9]"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;; S3 = {gtz}"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";;; S4 = Functions"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";;; S5 = (\316\273 v S)"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";;; S = S1 S S | S2 | - S | S3 S2 S S | S4 S | S5 "
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; Definitions for numbers and operations"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 11 #"define-type"
0 0 24 3 1 #" "
0 0 14 3 5 #"myNum"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 3 #"num"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 3 3 #")] "
0 0 17 3 28 #"; Returns the number itself."
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 3 #"add"
0 0 24 3 2 #" ("
0 0 14 3 3 #"lhs"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"myNum"
0 0 24 3 3 #") ("
0 0 14 3 3 #"rhs"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"myNum"
0 0 24 3 3 #")] "
0 0 17 3 18 #"; Adds two myNums."
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 3 #"neg"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"myNum"
0 0 24 3 3 #")] "
0 0 17 3 26 #"; Returns negative n (-n)."
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 3 #"mul"
0 0 24 3 2 #" ("
0 0 14 3 3 #"lhs"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"myNum"
0 0 24 3 3 #") ("
0 0 14 3 3 #"rhs"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"myNum"
0 0 24 3 3 #")] "
0 0 17 3 24 #"; Multiplies two myNums."
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 3 #"pow"
0 0 24 3 2 #" ("
0 0 14 3 4 #"base"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"myNum"
0 0 24 3 3 #") ("
0 0 14 3 3 #"top"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"myNum"
0 0 24 3 3 #")] "
0 0 17 3 43 #"; Takes base(myNum) to power of top(myNum)."
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; Definitions for myNumSug (Sugared)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 11 #"define-type"
0 0 24 3 1 #" "
0 0 14 3 8 #"myNumSug"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 6 #"numSug"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 3 3 #")] "
0 0 17 3 28 #"; Returns the number itself."
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 6 #"addSug"
0 0 24 3 2 #" ("
0 0 14 3 3 #"lhs"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 8 #"myNumSug"
0 0 24 3 3 #") ("
0 0 14 3 3 #"rhs"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 8 #"myNumSug"
0 0 24 3 3 #")] "
0 0 17 3 21 #"; Adds two myNumSugs."
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 6 #"subSug"
0 0 24 3 2 #" ("
0 0 14 3 3 #"lhs"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 8 #"myNumSug"
0 0 24 3 3 #") ("
0 0 14 3 3 #"rhs"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 8 #"myNumSug"
0 0 24 3 3 #")] "
0 0 17 3 26 #"; Substracts rhs from lhs."
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 6 #"negSug"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 8 #"myNumSug"
0 0 24 3 3 #")] "
0 0 17 3 26 #"; Returns negative n (-n)."
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 6 #"mulSug"
0 0 24 3 2 #" ("
0 0 14 3 3 #"lhs"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 8 #"myNumSug"
0 0 24 3 3 #") ("
0 0 14 3 3 #"rhs"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 8 #"myNumSug"
0 0 24 3 3 #")] "
0 0 17 3 27 #"; Multiplies two myNumSugs."
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 6 #"powSug"
0 0 24 3 2 #" ("
0 0 14 3 4 #"base"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 8 #"myNumSug"
0 0 24 3 3 #") ("
0 0 14 3 3 #"top"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 8 #"myNumSug"
0 0 24 3 3 #")] "
0 0 17 3 49 #"; Takes base(myNumSug) to power of top(myNumSug)."
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; desugar : myNumSug -> myNum"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"desugar"
0 0 24 3 2 #" ["
0 0 14 3 2 #"ms"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 8 #"myNumSug"
0 0 24 3 3 #"]) "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"myNum"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 9 #"type-case"
0 0 24 3 1 #" "
0 0 14 3 8 #"myNumSug"
0 0 24 3 1 #" "
0 0 14 3 2 #"ms"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 6 #"numSug"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 6 #"addSug"
0 0 24 3 2 #" ("
0 0 14 3 3 #"lhs"
0 0 24 3 1 #" "
0 0 14 3 3 #"rhs"
0 0 24 3 3 #") ("
0 0 14 3 3 #"add"
0 0 24 3 2 #" ("
0 0 14 3 7 #"desugar"
0 0 24 3 1 #" "
0 0 14 3 3 #"lhs"
0 0 24 3 3 #") ("
0 0 14 3 7 #"desugar"
0 0 24 3 1 #" "
0 0 14 3 3 #"rhs"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 6 #"subSug"
0 0 24 3 2 #" ("
0 0 14 3 3 #"lhs"
0 0 24 3 1 #" "
0 0 14 3 3 #"rhs"
0 0 24 3 3 #") ("
0 0 14 3 3 #"add"
0 0 24 3 2 #" ("
0 0 14 3 7 #"desugar"
0 0 24 3 1 #" "
0 0 14 3 3 #"lhs"
0 0 24 3 3 #") ("
0 0 14 3 3 #"mul"
0 0 24 3 2 #" ("
0 0 14 3 7 #"desugar"
0 0 24 3 1 #" "
0 0 14 3 3 #"rhs"
0 0 24 3 3 #") ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 6 #"negSug"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 3 #"mul"
0 0 24 3 2 #" ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 3 #") ("
0 0 14 3 7 #"desugar"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 6 #"mulSug"
0 0 24 3 2 #" ("
0 0 14 3 3 #"lhs"
0 0 24 3 1 #" "
0 0 14 3 3 #"rhs"
0 0 24 3 3 #") ("
0 0 14 3 3 #"mul"
0 0 24 3 2 #" ("
0 0 14 3 7 #"desugar"
0 0 24 3 1 #" "
0 0 14 3 3 #"lhs"
0 0 24 3 3 #") ("
0 0 14 3 7 #"desugar"
0 0 24 3 1 #" "
0 0 14 3 3 #"rhs"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 6 #"powSug"
0 0 24 3 2 #" ("
0 0 14 3 4 #"base"
0 0 24 3 1 #" "
0 0 14 3 3 #"top"
0 0 24 3 3 #") ("
0 0 14 3 3 #"pow"
0 0 24 3 2 #" ("
0 0 14 3 7 #"desugar"
0 0 24 3 1 #" "
0 0 14 3 4 #"base"
0 0 24 3 3 #") ("
0 0 14 3 7 #"desugar"
0 0 24 3 1 #" "
0 0 14 3 3 #"top"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; Definitions for myExpr"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 11 #"define-type"
0 0 24 3 1 #" "
0 0 14 3 6 #"myExpr"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 4 #"numE"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 3 3 #")] "
0 0 17 3 8 #"; Number"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 3 #"idE"
0 0 24 3 2 #" ("
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 3 #")] "
0 0 17 3 12 #"; Identifier"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 4 #"appE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"func"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 3 #") ("
0 0 14 3 3 #"arg"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 24 3 1 #" "
0 0 14 3 6 #"myExpr"
0 0 24 3 4 #"))] "
0 0 17 3 24 #"; Function and arguments"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 4 #"addE"
0 0 24 3 2 #" ("
0 0 14 3 3 #"lhs"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"myExpr"
0 0 24 3 3 #") ("
0 0 14 3 3 #"rhs"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"myExpr"
0 0 24 3 3 #")] "
0 0 17 3 18 #"; Adds rhs and lhs"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 4 #"mulE"
0 0 24 3 2 #" ("
0 0 14 3 3 #"lhs"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"myExpr"
0 0 24 3 3 #") ("
0 0 14 3 3 #"rhs"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"myExpr"
0 0 24 3 3 #")] "
0 0 17 3 24 #"; Multiplies rhs and lhs"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 4 #"powE"
0 0 24 3 2 #" ("
0 0 14 3 3 #"lhs"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"myExpr"
0 0 24 3 3 #") ("
0 0 14 3 3 #"rhs"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"myExpr"
0 0 24 3 3 #")] "
0 0 17 3 27 #"; Takes power of lhs to rhs"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 4 #"negE"
0 0 24 3 2 #" ("
0 0 14 3 3 #"lhs"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"myExpr"
0 0 24 3 3 #")] "
0 0 17 3 28 #"; Takes negative of a number"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 4 #"gtzE"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 3 3 #") ("
0 0 14 3 7 #"caseOne"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"myExpr"
0 0 24 3 3 #") ("
0 0 14 3 7 #"caseTwo"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"myExpr"
0 0 24 3 4 #")]) "
0 0 17 3 35 #"; caseOne if n>0, caseTwo otherwise"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";; Definitions for Binding"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 11 #"define-type"
0 0 24 3 1 #" "
0 0 14 3 7 #"Binding"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 4 #"bind"
0 0 24 3 2 #" ("
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 3 #") ("
0 0 14 3 3 #"val"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 17 #"define-type-alias"
0 0 24 3 1 #" "
0 0 14 3 3 #"Env"
0 0 24 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 24 3 1 #" "
0 0 14 3 7 #"Binding"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"mt-env"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"extend-env"
0 0 24 3 1 #" "
0 0 14 3 4 #"cons"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; Definitions for function definition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 11 #"define-type"
0 0 24 3 1 #" "
0 0 14 3 7 #"funcDef"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 4 #"fdef"
0 0 24 3 2 #" ("
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 3 #") ("
0 0 14 3 3 #"arg"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"body"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"myExpr"
0 0 24 3 3 #")] "
0 0 17 3 40 #"; Name, argument and body for a function"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 7         109 4           0 0           0 17 0 17 3 38
#";; takePower : number number -> number"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";; Takes base to the power of top using accumulator approach."
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; Examples"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";; 5 3 -> 125"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; 3 2 -> 9"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";; -2 4 -> 16"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; -2 5 -> -32"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; 0 4 -> 0"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; 4 -1 -> Illegal Expression"
0           0 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"takePower"
0 0 24 3 2 #" ["
0 0 14 3 4 #"base"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 3 3 #"] ["
0 0 14 3 3 #"top"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 3 3 #"]) "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 15 #"takePowerHelper"
0 0 24 3 1 #" "
0 0 14 3 4 #"base"
0 0 24 3 1 #" "
0 0 14 3 3 #"top"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 7         109 4           0 0           0 17 0 17 3 51
#";; takePowerHelper : number number number -> number"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";; Accumulator approach implementation to takePower function"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; Examples are the same as takePower"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; Template"
0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #";; (define (takePowerHelper [b : number] [p : number] [cur : number]"
 #") : number"
) 0 0 24 29 1 #"\n"
0 0 17 3 10 #";;   (cond"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";;     [(= p 0) ...]"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";;     [(> p 0) (takePowerHelper ... ... ...)]"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";;     [else ...]))"
0           0 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"takePowerHelper"
0 0 24 3 2 #" ["
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 3 3 #"] ["
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 3 3 #"] ["
0 0 14 3 3 #"cur"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 3 3 #"]) "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 3 #"cur"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 15 #"takePowerHelper"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 3 #"cur"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"takePower"
0 0 24 3 1 #" "
0 0 19 3 20 #"\"Illegal Expression\""
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 7         613 4           0 0           0 101 0 17 3 38
#";; parseSug : s-expression -> mynumSug"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; Converts a s-expression to mynumSug"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; Examples"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; '4 -> (numSug 4)"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; '7 -> (numSug 7)"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; '12 -> (numSug 12)"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; '15 -> (numSug 15)"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; '20 -> (numSug 20)"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; '(+ 3 4) -> (addSug (numSug 3) (numSug 4))"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; '(+ 4 5) -> (addSug (numSug 4) (numSug 5))"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; '(+ 4 6) -> (addSug (numSug 4) (numSug 6))"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; '(+ 12 5) -> (addSug (numSug 12) (numSug 5))"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; '(+ 26 3) -> (addSug (numSug 26) (numSug 3))"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; '(- 4 3) -> (subSug (numSug 4) (numSug 3))"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; '(- 42 5) -> (subSug (numSug 42) (numSug 5))"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; '(- 4 6) -> (subSug (numSug 4) (numSug 6))"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; '(- 12 5) -> (subSug (numSug 12) (numSug 5))"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; '(- 26 3) -> (subSug (numSug 26) (numSug 3))"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; '(- 3) -> (negSug (numSug 3))"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; '(- 4) -> (negSug (numSug 4))"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; '(- -4) -> (negSug (numSug -4))"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; '(- 12) -> (negSug (numSug 12))"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; '(- 26) -> (negSug (numSug 26))"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; '(* 3 4) -> (mulSug (numSug 3) (numSug 4))"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; '(* 4 5) -> (mulSug (numSug 4) (numSug 5))"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; '(* 4 6) -> (mulSug (numSug 4) (numSug 6))"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; '(* 12 5) -> (mulSug (numSug 12) (numSug 5))"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; '(* 26 3) -> (mulSug (numSug 26) (numSug 3))"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; '(** 3 4) -> (powSug (numSug 3) (numSug 4))"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; '(** 4 5) -> (powSug (numSug 4) (numSug 5))"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; '(** 4 6) -> (powSug (numSug 4) (numSug 6))"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; '(** 12 5) -> (powSug (numSug 12) (numSug 5))"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; '(** 26 3) -> (powSug (numSug 26) (numSug 3))"
0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";; '(+ 5 (* 6 3)) -> (addSug (numSug 5) (mulSug (numSug 6) (numSug 3"
 #")))"
) 0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";; '(+ 25 (- (** 2 4))) -> (addSug (numSug 25) (negSug (powSug (numS"
 #"ug 2) (numSug 4))))"
) 0 0 24 29 1 #"\n"
0 0 17 3 110
(
 #";; '(* 8 (+ 6 (+ 5 (- 3)))) -> (mulSug (numSug 8) (addSug (numSug 6)"
 #" (addSug (numSug 5) (negSug (numSug 3)))))"
) 0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";; '(* 0 (** -5 3)) -> (mulSug (numSug 0) (powSug (numSug -5) (numSu"
 #"g 3)))"
) 0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";; '(** (+ 6 1) 8) -> (addSug (addSug (numSug 6) (numSug 1)) (numSug"
 #" 8))"
) 0 0 24 29 1 #"\n"
0 0 17 3 11 #";; Template"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; (define (parse [s : s-expression] : mynumSug"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;   (cond"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";;     [(s-exp-number? s) ...]"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";;     [(s-exp-list? s) ..."
0 0 24 29 1 #"\n"
0 0 17 3 17 #";;       (let ..."
0 0 24 29 1 #"\n"
0 0 17 3 20 #";;         (case ..."
0 0 24 29 1 #"\n"
0 0 17 3 35 #";;           [(+) (addSug ... ...)]"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";;           [(-) (minusHelper ...)]"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";;           [(*) (mulSug ... ...)]"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";;           [(**) (powSug ... ...)]"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";;           [else ...]))]"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";;     [else ...]))"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 2 #" ["
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 12 #"s-expression"
0 0 24 3 3 #"]) "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 8 #"myNumSug"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 13 #"s-exp-number?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 2 #" ("
0 0 14 3 13 #"s-exp->number"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 11 #"s-exp-list?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 2 #"sl"
0 0 24 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 4 #"case"
0 0 24 3 2 #" ("
0 0 14 3 13 #"s-exp->symbol"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 1 #"+"
0 0 24 3 3 #") ("
0 0 14 3 6 #"addSug"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")) ("
0 0 14 3 8 #"parseSug"
0 0 24 3 2 #" ("
0 0 14 3 5 #"third"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 1 #"-"
0 0 24 3 3 #") ("
0 0 14 3 11 #"minusHelper"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 1 #"*"
0 0 24 3 3 #") ("
0 0 14 3 6 #"mulSug"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")) ("
0 0 14 3 8 #"parseSug"
0 0 24 3 2 #" ("
0 0 14 3 5 #"third"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 2 #"**"
0 0 24 3 3 #") ("
0 0 14 3 6 #"powSug"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")) ("
0 0 14 3 8 #"parseSug"
0 0 24 3 2 #" ("
0 0 14 3 5 #"third"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"parseSug"
0 0 24 3 1 #" "
0 0 19 3 20 #"\"invalid list input\""
0 0 24 3 5 #")]))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"parseSug"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"invalid input\""
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 7         157 4           0 0           0 25 0 17 3 48
#";; minusHelper : list of s-expression : myNumSug"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; Parses s-expressions with a - symbol."
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; Examples"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; (s-exp->list '(- 5))) -> (negSug (numSug 5))"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";; (s-exp->list '(- 5 3))) -> (subSug (numSug 5) (numSug 3)))"
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";; (s-exp->list '(- 5 (- 3)))) -> (subSug (numSug 5) (negSug (numSug"
 #" 3)))"
) 0 0 24 29 1 #"\n"
0 0 17 3 86
(
 #";; (s-exp->list '(- 5 (- 3 6)))) -> (subSug (numSug 5) (subSug (numS"
 #"ug 3) (numSug 6)))"
) 0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";; (s-exp->list '(- (- 5 3)))) (negSug (subSug (numSug 5) (numSug 3)"
 #"))"
) 0 0 24 29 1 #"\n"
0 0 17 3 11 #";; Template"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; (define (minusHelper sl) : myNumSug"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;   (cond"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";;     [(> (length sl) 2) (subSug ...(second sl) ...(third sl))]"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";;     [else (negSug ...(second sl))]))"
0           0 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"minusHelper"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 2 #") "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 8 #"myNumSug"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 6 #"subSug"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")) ("
0 0 14 3 8 #"parseSug"
0 0 24 3 2 #" ("
0 0 14 3 5 #"third"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 6 #"negSug"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 7         445 4           0 0           0 73 0 17 3 25
#";; eval : myNum -> number"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";; Evaluates a myNum and returns the result as a number."
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; Examples"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";; (num 4) -> 4"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";; (num 7) -> 7"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; (num 12) -> 12"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; (num -12) -> -12"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; (num 25) -> 25"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; (add (num 5) (num 4)) -> 9"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; (add (num 10) (num 5)) -> 15"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; (add (num 1) (num -4)) -> -3"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; (add (num 2) (num 6)) -> 8"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; (add (num 0) (num 0)) -> 0"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";; (neg (num 5)) -> -5"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; (neg (num 10)) -> -10"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; (neg (num 0)) -> 0"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";; (neg (num -2)) -> 2"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";; (neg (num -124)) -> 124"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; (mul (num 5) (num 4)) -> 20"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; (mul (num 11) (num 5)) -> 55"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; (mul (num 1) (num -4)) -> -4"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; (mul (num -2) (num -6)) -> 12"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; (mul (num 0) (num 8)) -> 0"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; (pow (num 5) (num 3)) -> 125"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; (pow (num 1) (num 5)) -> 1"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; (pow (num -3) (num 3)) -> -27"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; (pow (num -2) (num 6)) -> 64"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; (pow (num 0) (num 5)) -> 0"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; (add (add (num 3) (num 4)) (num 35)) -> 42"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; Template"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; (define (eval [expr : myNum])"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";;   (type-case myNum expr"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";;    [num (n) ...(n)]"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";;    [add (lhs rhs) (+ ...(lhs) ...(rhs))]"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";;    [neg (n) ...(n)]"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";;    [mul (lhs rhs) (* ...(lhs) ...(rhs)]"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";;    [pow (lhs rhs) (takePower ...(lhs) ...(rhs))]))"
0           0 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 24 3 2 #" ["
0 0 14 3 4 #"expr"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"myNum"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 9 #"type-case"
0 0 24 3 1 #" "
0 0 14 3 5 #"myNum"
0 0 24 3 1 #" "
0 0 14 3 4 #"expr"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 3 #"num"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 2 #") "
0 0 14 3 1 #"n"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 3 #"add"
0 0 24 3 2 #" ("
0 0 14 3 3 #"lhs"
0 0 24 3 1 #" "
0 0 14 3 3 #"rhs"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 24 3 1 #" "
0 0 14 3 3 #"lhs"
0 0 24 3 3 #") ("
0 0 14 3 4 #"eval"
0 0 24 3 1 #" "
0 0 14 3 3 #"rhs"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 3 #"neg"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #") "
0 0 21 3 2 #"-1"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 3 #"mul"
0 0 24 3 2 #" ("
0 0 14 3 3 #"lhs"
0 0 24 3 1 #" "
0 0 14 3 3 #"rhs"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 24 3 1 #" "
0 0 14 3 3 #"lhs"
0 0 24 3 3 #") ("
0 0 14 3 4 #"eval"
0 0 24 3 1 #" "
0 0 14 3 3 #"rhs"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 3 #"pow"
0 0 24 3 2 #" ("
0 0 14 3 3 #"lhs"
0 0 24 3 1 #" "
0 0 14 3 3 #"rhs"
0 0 24 3 3 #") ("
0 0 14 3 9 #"takePower"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 24 3 1 #" "
0 0 14 3 3 #"lhs"
0 0 24 3 3 #") ("
0 0 14 3 4 #"eval"
0 0 24 3 1 #" "
0 0 14 3 3 #"rhs"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 7         409 4           0 0           0 67 0 17 3 31
#";; evalSug : myNumSug -> number"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";; Evaluates a myNumSug and returns the result as a number."
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; Examples"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; (numSug 4) -> 4"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; (numSug 7) -> 7"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; (numSug 12) -> 12"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";; (numSug -12) -> -12"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; (numSug 25) -> 25"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; (addSug (numSug 5) (numSug 4)) -> 9"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; (addSug (numSug 10) (numSug 5)) -> 15"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; (addSug (numSug 1) (numSug -4)) -> -3"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; (addSug (numSug 2) (numSug 6)) -> 8"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; (addSug (numSug 0) (numSug 0)) -> 0"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; (subSug (numSug 5) (numSug 4)) -> 1"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; (subSug (numSug 10) (numSug 5)) -> 5"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; (subSug (numSug 1) (numSug -4)) -> -5"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; (subSug (numSug 2) (numSug 6)) -> -4"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; (subSug (numSug 0) (numSug 0)) -> 0"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; (negSug (numSug 5)) -> -5"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; (negSug (numSug 10)) -> -10"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; (negSug (numSug 0)) -> 0"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; (negSug (numSug -2)) -> 2"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; (negSug (numSug -124)) -> 124"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; (mulSug (numSug 5) (numSug 4)) -> 20"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; (mulSug (numSug 11) (numSug 5)) -> 55"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; (mulSug (numSug 1) (numSug -4)) -> -4"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; (mulSug (numSug -2) (numSug -6)) -> 12"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; (mulSug (numSug 0) (numSug 8)) -> 0"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; (powSug (numSug 5) (numSug 3)) -> 125"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; (powSug (numSug 1) (numSug 5)) -> 1"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; (powSug (numSug -3) (numSug 3)) -> -27"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; (powSug (numSug -2) (numSug 6)) -> 64"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; (powSug (numSug 0) (numSug 5)) -> 0"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";; (addSug (addSug (numSug 3) (numSug 4)) (numSug 35)) -> 42"
0           0 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"evalSug"
0 0 24 3 2 #" ["
0 0 14 3 4 #"expr"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 8 #"myNumSug"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"eval"
0 0 24 3 2 #" ("
0 0 14 3 7 #"desugar"
0 0 24 3 1 #" "
0 0 14 3 4 #"expr"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 7         565 4           0 0           0 93 0 17 3 42
#";; evalExpression : s-expression -> number"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; Parses and evaluates s-expression"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; Examples"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";; '(+ 5 3) -> 8"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";; '(+ 3 4) -> 7"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; '(+ -3 4) -> 1"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; '(+ 13 6) -> 19"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; '(+ -4 -5) -> -9"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";; '(- 5 3) -> 2"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; '(- 3 4) -> -1"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; '(- -3 4) -> -7"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; '(- 13 6) -> 7"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; '(- -4 -5) -> 1"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";; '(- 5) -> -5"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; '(- 12) -> -12"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; '(- 0) -> 0"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";; '(- -5) -> 5"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; '(- -12) -> 12"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; '(* 5 3) -> 15"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; '(* 3 4) -> 12"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; '(* -3 4) -> -12"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; '(* 3 6) -> 18"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; '(* -4 -5) -> 20"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; '(** 5 3) -> 125"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; '(** 3 3) -> 27"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; '(** -3 3) -> -27"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; '(** -6 2) -> 36"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; '(** 0 5) -> 0"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; '(+ 5 (- (* 4 2) (- 3))) -> 16"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; '(* (** (- 5) 2) (- (+ 1 2))) -> -75"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; '(* 123 (- (- 5 (- -5)))) -> 0"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; '(+ (** -5 (- -2)) (- 24)) -> 1"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; '(- (** 2 5) (+ 4 (** (* 3 (- 5 (- 6))) 1))) -> -5"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; '(gtz 4 (+ 2 3) (+ 6 4)) -> 5"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; '(gtz -4 (+ 2 3) (+ 6 4)) -> 10"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";; '(gtz 1 7 (+ 6 4)) -> 7"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; '(gtz 0 7 (* 6 4)) -> 24"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; '(fun doublePower 2 4)) -> 32"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; '(fun doublePower (+ 2 3) 2)) -> 50"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; '(fun addThreeNumbers (- 2) 3 4)) -> 5"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";; '(fun addThreeNumbers (+ 2 3) (fun doublePower 2 4) (* 5 2))) -> "
 #"47"
) 0 0 24 29 1 #"\n"
0 0 17 3 11 #";; Template"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";; (define (evalExpression [expr : s-expression]) : number"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";;   (let ([sl (s-exp->list expr)])"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;     (cond"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";;       [(<= ...(length sl) ...) (evalSug ...expr)]"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";;       [else interp ...expr ...funcList])))"
0           0 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"evalExpression"
0 0 24 3 2 #" ["
0 0 14 3 4 #"expr"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 12 #"s-expression"
0 0 24 3 3 #"]) "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 2 #"sl"
0 0 24 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 24 3 1 #" "
0 0 14 3 4 #"expr"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 39 #";;[(= 1 (length sl)) (evalLambda expr)]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 7 #"evalSug"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 1 #" "
0 0 14 3 4 #"expr"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"s-exp->symbol"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 14 3 3 #"gtz"
0 0 24 3 3 #") ("
0 0 14 3 6 #"interp"
0 0 24 3 2 #" ("
0 0 14 3 11 #"parseMyExpr"
0 0 24 3 1 #" "
0 0 14 3 4 #"expr"
0 0 24 3 2 #") "
0 0 14 3 6 #"mt-env"
0 0 24 3 1 #" "
0 0 14 3 8 #"funcList"
0 0 24 3 7 #")])])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 7         217 4           0 0           0 35 0 17 3 42
#"; interp : myExpr listOfFuncDefs -> number"
0 0 24 29 1 #"\n"
0 0 17 3 30 #"; Returns the result of myExpr"
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; Examples"
0 0 24 29 1 #"\n"
0 0 17 3 22 #"; (numE 5) funcList) 5"
0 0 24 29 1 #"\n"
0 0 17 3 24 #"; (numE -5) funcList) -5"
0 0 24 29 1 #"\n"
0 0 17 3 41 #"; (appE 'double (numE 5)) funcList) -> 10"
0 0 24 29 1 #"\n"
0 0 17 3 40 #"; (appE 'triple (numE 3)) funcList) -> 9"
0 0 24 29 1 #"\n"
0 0 17 3 42 #"; (addE (numE 5) (numE 6)) funcList) -> 11"
0 0 24 29 1 #"\n"
0 0 17 3 43 #"; (addE (numE -3) (numE 2)) funcList) -> -1"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; (negE (numE 5)) funcList) -> -5"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; (negE (numE -3)) funcList) -> 3"
0 0 24 29 1 #"\n"
0 0 17 3 35 #"; (negE (numE 20)) funcList) -> -20"
0 0 24 29 1 #"\n"
0 0 17 3 42 #"; (mulE (numE 5) (numE 6)) funcList) -> 30"
0 0 24 29 1 #"\n"
0 0 17 3 43 #"; (mulE (numE -3) (numE 2)) funcList) -> -6"
0 0 24 29 1 #"\n"
0 0 17 3 42 #"; (powE (numE 4) (numE 2)) funcList) -> 16"
0 0 24 29 1 #"\n"
0 0 17 3 44 #"; (powE (numE -3) (numE 3)) funcList) -> -27"
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #"; (gtzE 1 (powE (numE 4) (numE 2)) (mulE (numE 5) (numE 6))) funcLis"
 #"t) -> 16"
) 0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #"; (gtzE -1 (powE (numE 4) (numE 2)) (mulE (numE 5) (numE 6))) funcLi"
 #"st) -> 30"
) 0           0 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 2 #" ["
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"myExpr"
0 0 24 3 3 #"] ["
0 0 14 3 3 #"env"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"Env"
0 0 24 3 2 #"] "
0 0 14 3 3 #"fds"
0 0 24 3 2 #") "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 9 #"type-case"
0 0 24 3 1 #" "
0 0 14 3 6 #"myExpr"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"numE"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 2 #") "
0 0 14 3 1 #"n"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"appE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"func"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 3 #") ("
0 0 14 3 10 #"appEHelper"
0 0 24 3 1 #" "
0 0 14 3 4 #"func"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 1 #" "
0 0 14 3 3 #"fds"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 3 #"idE"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 6 #"lookup"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"addE"
0 0 24 3 2 #" ("
0 0 14 3 3 #"lhs"
0 0 24 3 1 #" "
0 0 14 3 3 #"rhs"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 1 #" "
0 0 14 3 3 #"lhs"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 1 #" "
0 0 14 3 3 #"fds"
0 0 24 3 3 #") ("
0 0 14 3 6 #"interp"
0 0 24 3 1 #" "
0 0 14 3 3 #"rhs"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 1 #" "
0 0 14 3 3 #"fds"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"mulE"
0 0 24 3 2 #" ("
0 0 14 3 3 #"lhs"
0 0 24 3 1 #" "
0 0 14 3 3 #"rhs"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 1 #" "
0 0 14 3 3 #"lhs"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 1 #" "
0 0 14 3 3 #"fds"
0 0 24 3 3 #") ("
0 0 14 3 6 #"interp"
0 0 24 3 1 #" "
0 0 14 3 3 #"rhs"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 1 #" "
0 0 14 3 3 #"fds"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"powE"
0 0 24 3 2 #" ("
0 0 14 3 3 #"lhs"
0 0 24 3 1 #" "
0 0 14 3 3 #"rhs"
0 0 24 3 3 #") ("
0 0 14 3 9 #"takePower"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 1 #" "
0 0 14 3 3 #"lhs"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 1 #" "
0 0 14 3 3 #"fds"
0 0 24 3 3 #") ("
0 0 14 3 6 #"interp"
0 0 24 3 1 #" "
0 0 14 3 3 #"rhs"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 1 #" "
0 0 14 3 3 #"fds"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"negE"
0 0 24 3 2 #" ("
0 0 14 3 3 #"lhs"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 1 #" "
0 0 14 3 3 #"lhs"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 1 #" "
0 0 14 3 3 #"fds"
0 0 24 3 2 #") "
0 0 21 3 2 #"-1"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"gtzE"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 7 #"caseOne"
0 0 24 3 1 #" "
0 0 14 3 7 #"caseTwo"
0 0 24 3 3 #") ("
0 0 14 3 6 #"interp"
0 0 24 3 2 #" ("
0 0 14 3 21 #"greaterThanZeroHelper"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #") "
0 0 14 3 7 #"caseOne"
0 0 24 3 1 #" "
0 0 14 3 7 #"caseTwo"
0 0 24 3 2 #") "
0 0 14 3 3 #"env"
0 0 24 3 1 #" "
0 0 14 3 3 #"fds"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";;Tests below"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; Extend Environment Helper"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";; extendEnvHelper : (listof symbol) Env funcDef -> Env"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; Template"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"appEHelper"
0 0 24 3 1 #" "
0 0 14 3 4 #"func"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 2 #" ["
0 0 14 3 3 #"env"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"Env"
0 0 24 3 3 #"] ["
0 0 14 3 3 #"fds"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 24 3 1 #" "
0 0 14 3 7 #"funcDef"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" (["
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"fd"
0 0 24 3 2 #" ("
0 0 14 3 10 #"getFuncDef"
0 0 24 3 1 #" "
0 0 14 3 4 #"func"
0 0 24 3 1 #" "
0 0 14 3 3 #"fds"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 6 #"interp"
0 0 24 3 2 #" ("
0 0 14 3 9 #"fdef-body"
0 0 24 3 1 #" "
0 0 14 3 2 #"fd"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 15 #"extendEnvHelper"
0 0 24 3 1 #" "
0 0 14 3 2 #"fd"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 1 #" "
0 0 14 3 3 #"fds"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                      "
0 0 14 3 3 #"fds"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 2 #"de"
0 0 15 3 4 #"fine"
0 0 24 3 2 #" ("
0 0 14 3 15 #"extendEnvHelper"
0 0 24 3 1 #" "
0 0 14 3 2 #"fd"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 1 #" "
0 0 14 3 3 #"fds"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 10 #"extend-env"
0 0 24 3 2 #" ("
0 0 14 3 4 #"bind"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 8 #"fdef-arg"
0 0 24 3 1 #" "
0 0 14 3 2 #"fd"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 6 #"interp"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 2 #") "
0 0 14 3 3 #"env"
0 0 24 3 1 #" "
0 0 14 3 3 #"fds"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                  "
0 0 14 3 6 #"mt-env"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 15 #"extendEnvHelper"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 4 #"fdef"
0 0 24 3 2 #" ("
0 0 14 3 9 #"fdef-name"
0 0 24 3 1 #" "
0 0 14 3 2 #"fd"
0 0 24 3 3 #") ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 8 #"fdef-arg"
0 0 24 3 1 #" "
0 0 14 3 2 #"fd"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"fdef-body"
0 0 24 3 1 #" "
0 0 14 3 2 #"fd"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 2 #") "
0 0 14 3 3 #"env"
0 0 24 3 1 #" "
0 0 14 3 3 #"fds"
0 0 24 3 3 #") ("
0 0 14 3 10 #"extend-env"
0 0 24 3 2 #" ("
0 0 14 3 4 #"bind"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 8 #"fdef-arg"
0 0 24 3 1 #" "
0 0 14 3 2 #"fd"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 6 #"interp"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 2 #") "
0 0 14 3 3 #"env"
0 0 24 3 1 #" "
0 0 14 3 3 #"fds"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                  "
0 0 14 3 6 #"mt-env"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";; Lookup"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"lookup"
0 0 24 3 2 #" ["
0 0 15 3 3 #"for"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 3 #"] ["
0 0 14 3 3 #"env"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"Env"
0 0 24 3 3 #"]) "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 3 #") ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"lookup"
0 0 24 3 1 #" "
0 0 19 3 16 #"\"name not found\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 15 3 3 #"for"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bind-name"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 8 #"bind-val"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 6 #"lookup"
0 0 24 3 1 #" "
0 0 15 3 3 #"for"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 7 #"))])]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 7          37 4           0 0           0 5 0 17 3 34
#";; AppE Multiple Arguements Helper"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; Execute subst for all arguments"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";; appArgsHelper : funcDef (listof symbol) -> myExpr"
0           0 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"appArgsHelper"
0 0 24 3 2 #" ["
0 0 14 3 2 #"fd"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 7 #"funcDef"
0 0 24 3 3 #"] ["
0 0 14 3 4 #"args"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 24 3 1 #" "
0 0 14 3 6 #"myExpr"
0 0 24 3 4 #")]) "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"myExpr"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 13 #"appArgsHelper"
0 0 24 3 2 #" ("
0 0 14 3 4 #"fdef"
0 0 24 3 2 #" ("
0 0 14 3 9 #"fdef-name"
0 0 24 3 1 #" "
0 0 14 3 2 #"fd"
0 0 24 3 3 #") ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 8 #"fdef-arg"
0 0 24 3 1 #" "
0 0 14 3 2 #"fd"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"subst"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 3 #") ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 8 #"fdef-arg"
0 0 24 3 1 #" "
0 0 14 3 2 #"fd"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"fdef-body"
0 0 24 3 1 #" "
0 0 14 3 2 #"fd"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 5 #"subst"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 3 #") ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 8 #"fdef-arg"
0 0 24 3 1 #" "
0 0 14 3 2 #"fd"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"fdef-body"
0 0 24 3 1 #" "
0 0 14 3 2 #"fd"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; Test Functions"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"addFunc"
0 0 24 3 2 #" ("
0 0 14 3 4 #"fdef"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"addFunc"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"y"
0 0 24 3 3 #") ("
0 0 14 3 4 #"addE"
0 0 24 3 2 #" ("
0 0 14 3 3 #"idE"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 3 #"idE"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"y"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"fa"
0 0 24 3 2 #" ("
0 0 14 3 4 #"fdef"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"fa"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"y"
0 0 24 3 3 #") ("
0 0 14 3 4 #"addE"
0 0 24 3 2 #" ("
0 0 14 3 3 #"idE"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 4 #"mulE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 3 #"idE"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"y"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"funcList"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 7 #"addFunc"
0 0 24 3 1 #" "
0 0 14 3 2 #"fa"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 7         181 4           0 0           0 29 0 17 3 57
#";; greaterThanZeroHelper : myExpr myExpr myExpr -> myExpr"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; Helper function for greater than zero case."
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; Returns caseOne if n>0, caseTwo otherwise."
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; Examples"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; (numE 1) (numE 5) (numE 7) -> (numE 5)"
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";; (numE 1) (addE (numE 5) (numE 6)) (numE 7) -> (addE (numE 5) (num"
 #"E 6))"
) 0 0 24 29 1 #"\n"
0 0 17 3 57 #";; (numE 0) (addE (numE 5) (numE 6)) (numE 7) -> (numE 7)"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; (numE -1) (numE 5) (numE 8) -> (numE 8)"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";; (addE (numE 3) (numE 4)) (numE 1) (numE -1) -> (numE 1)"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";; (mulE (numE 0) (numE 23)) (numE 1) (numE -1) -> (numE -1)"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; Template"
0 0 24 29 1 #"\n"
0 0 17 3 94
(
 #";; (define (greaterThanZeroHelper [n : myExpr] [caseOne : myExpr] [c"
 #"aseTwo : myExpr]) : myExpr"
) 0 0 24 29 1 #"\n"
0 0 17 3 10 #";;   (cond"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";;     [(> ...n 0) ...caseOne]"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";;     [else ...caseTwo]))"
0           0 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"greaterThanZeroHelper"
0 0 24 3 2 #" ["
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"myExpr"
0 0 24 3 3 #"] ["
0 0 14 3 7 #"caseOne"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"myExpr"
0 0 24 3 3 #"] ["
0 0 14 3 7 #"caseTwo"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"myExpr"
0 0 24 3 3 #"]) "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"myExpr"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 4 #" ) ("
0 0 14 3 4 #"list"
0 0 24 3 4 #" )) "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 7 #"caseOne"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 7 #"caseTwo"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 7          73 4           0 0           0 11 0 17 3 40
#"; subst : myExpr myExpr myExpr -> myExpr"
0 0 24 29 1 #"\n"
0 0 17 3 38 #"; Substitutes identifiers in functions"
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; Examples"
0 0 24 29 1 #"\n"
0 0 17 3 66
#"; (numE 5) 'x (powE (numE 9) (numE 2)) -> (powE (numE 9) (numE 2))"
0 0 24 29 1 #"\n"
0 0 17 3 66
#"; (numE 5) 'x (addE (idE 'x) (idE 'x)) -> (addE (numE 5) (numE 5))"
0 0 24 29 1 #"\n"
0 0 17 3 68
#"; (numE 5) 'x (mulE (numE 8) (idE 'x))) -> (mulE (numE 8) (numE 4)))"
0           0 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"subst"
0 0 24 3 2 #" ["
0 0 14 3 4 #"what"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"myExpr"
0 0 24 3 3 #"] ["
0 0 15 3 3 #"for"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 3 #"] ["
0 0 14 3 2 #"in"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"myExpr"
0 0 24 3 3 #"]) "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"myExpr"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 9 #"type-case"
0 0 24 3 1 #" "
0 0 14 3 6 #"myExpr"
0 0 24 3 1 #" "
0 0 14 3 2 #"in"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"numE"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 2 #") "
0 0 14 3 2 #"in"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 3 #"idE"
0 0 24 3 2 #" ("
0 0 14 3 1 #"s"
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"               [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 15 3 3 #"for"
0 0 24 3 2 #") "
0 0 14 3 4 #"what"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 2 #"in"
0 0 24 3 3 #"])]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"appE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"func"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 3 #") ("
0 0 14 3 4 #"appE"
0 0 24 3 1 #" "
0 0 14 3 4 #"func"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 5 #"subst"
0 0 24 3 1 #" "
0 0 14 3 4 #"what"
0 0 24 3 1 #" "
0 0 15 3 3 #"for"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"addE"
0 0 24 3 2 #" ("
0 0 14 3 3 #"lhs"
0 0 24 3 1 #" "
0 0 14 3 3 #"rhs"
0 0 24 3 3 #") ("
0 0 14 3 4 #"addE"
0 0 24 3 2 #" ("
0 0 14 3 5 #"subst"
0 0 24 3 1 #" "
0 0 14 3 4 #"what"
0 0 24 3 1 #" "
0 0 15 3 3 #"for"
0 0 24 3 1 #" "
0 0 14 3 3 #"lhs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 5 #"subst"
0 0 24 3 1 #" "
0 0 14 3 4 #"what"
0 0 24 3 1 #" "
0 0 15 3 3 #"for"
0 0 24 3 1 #" "
0 0 14 3 3 #"rhs"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"mulE"
0 0 24 3 2 #" ("
0 0 14 3 3 #"lhs"
0 0 24 3 1 #" "
0 0 14 3 3 #"rhs"
0 0 24 3 3 #") ("
0 0 14 3 4 #"mulE"
0 0 24 3 2 #" ("
0 0 14 3 5 #"subst"
0 0 24 3 1 #" "
0 0 14 3 4 #"what"
0 0 24 3 1 #" "
0 0 15 3 3 #"for"
0 0 24 3 1 #" "
0 0 14 3 3 #"lhs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 5 #"subst"
0 0 24 3 1 #" "
0 0 14 3 4 #"what"
0 0 24 3 1 #" "
0 0 15 3 3 #"for"
0 0 24 3 1 #" "
0 0 14 3 3 #"rhs"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"powE"
0 0 24 3 2 #" ("
0 0 14 3 3 #"lhs"
0 0 24 3 1 #" "
0 0 14 3 3 #"rhs"
0 0 24 3 3 #") ("
0 0 14 3 4 #"powE"
0 0 24 3 2 #" ("
0 0 14 3 5 #"subst"
0 0 24 3 1 #" "
0 0 14 3 4 #"what"
0 0 24 3 1 #" "
0 0 15 3 3 #"for"
0 0 24 3 1 #" "
0 0 14 3 3 #"lhs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 5 #"subst"
0 0 24 3 1 #" "
0 0 14 3 4 #"what"
0 0 24 3 1 #" "
0 0 15 3 3 #"for"
0 0 24 3 1 #" "
0 0 14 3 3 #"rhs"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"negE"
0 0 24 3 2 #" ("
0 0 14 3 3 #"lhs"
0 0 24 3 3 #") ("
0 0 14 3 4 #"negE"
0 0 24 3 2 #" ("
0 0 14 3 5 #"subst"
0 0 24 3 1 #" "
0 0 14 3 4 #"what"
0 0 24 3 1 #" "
0 0 15 3 3 #"for"
0 0 24 3 1 #" "
0 0 14 3 3 #"lhs"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"gtzE"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 7 #"caseOne"
0 0 24 3 1 #" "
0 0 14 3 7 #"caseTwo"
0 0 24 3 3 #") ("
0 0 14 3 21 #"greaterThanZeroHelper"
0 0 24 3 2 #" ("
0 0 14 3 5 #"subst"
0 0 24 3 1 #" "
0 0 14 3 4 #"what"
0 0 24 3 1 #" "
0 0 15 3 3 #"for"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"subst"
0 0 24 3 1 #" "
0 0 14 3 4 #"what"
0 0 24 3 1 #" "
0 0 15 3 3 #"for"
0 0 24 3 1 #" "
0 0 14 3 7 #"caseOne"
0 0 24 3 3 #") ("
0 0 14 3 5 #"subst"
0 0 24 3 1 #" "
0 0 14 3 4 #"what"
0 0 24 3 1 #" "
0 0 15 3 3 #"for"
0 0 24 3 1 #" "
0 0 14 3 7 #"caseTwo"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 7          61 4           0 0           0 9 0 17 3 46
#"; getFuncDef : symbol listOfFuncDef -> funcDef"
0 0 24 29 1 #"\n"
0 0 17 3 60
#"; Returns the full function definition of n if exists in fds"
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; Examples"
0 0 24 29 1 #"\n"
0 0 17 3 55 #"; 'double -> (fdef 'double 'x (addE (idE 'x) (idE 'x)))"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #"; 'triple -> (fdef 'triple 'x (addE (appE 'double (idE 'x)) (idE 'x)"
 #"))"
) 0           0 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"getFuncDef"
0 0 24 3 2 #" ["
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 3 #"] ["
0 0 14 3 3 #"fds"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 24 3 1 #" "
0 0 14 3 7 #"funcDef"
0 0 24 3 4 #")]) "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 7 #"funcDef"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"fds"
0 0 24 3 3 #") ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 10 #"getFuncDef"
0 0 24 3 1 #" "
0 0 19 3 20 #"\"Undefined function\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 3 #"fds"
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                   [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"fdef-name"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"fds"
0 0 24 3 5 #"))) ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"fds"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 10 #"getFuncDef"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"fds"
0 0 24 3 7 #"))])]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 10 #"getFuncDef"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"addFunc"
0 0 24 3 1 #" "
0 0 14 3 8 #"funcList"
0 0 24 3 3 #") ("
0 0 14 3 4 #"fdef"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"addFunc"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"y"
0 0 24 3 3 #") ("
0 0 14 3 4 #"addE"
0 0 24 3 2 #" ("
0 0 14 3 3 #"idE"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 3 #"idE"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"y"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 10 #"getFuncDef"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"fa"
0 0 24 3 1 #" "
0 0 14 3 8 #"funcList"
0 0 24 3 3 #") ("
0 0 14 3 4 #"fdef"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"fa"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"y"
0 0 24 3 3 #") ("
0 0 14 3 4 #"addE"
0 0 24 3 2 #" ("
0 0 14 3 3 #"idE"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 4 #"mulE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 3 #"idE"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"y"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 7         181 4           0 0           0 29 0 17 3 38
#"; parseMyExpr : s-expression -> myExpr"
0 0 24 29 1 #"\n"
0 0 17 3 48 #"; Parses an s-expression and outputs as a myExpr"
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; Examples"
0 0 24 29 1 #"\n"
0 0 17 3 16 #"; '5 -> (numE 5)"
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; '-1 -> (numE -1)"
0 0 24 29 1 #"\n"
0 0 17 3 38 #"; '(+ 5 3) -> (addE (numE 5) (numE 3))"
0 0 24 29 1 #"\n"
0 0 17 3 38 #"; '(+ 2 6) -> (addE (numE 2) (numE 6))"
0 0 24 29 1 #"\n"
0 0 17 3 45 #"; '(- 5 3) -> (addE (numE 5) (negE (numE 3)))"
0 0 24 29 1 #"\n"
0 0 17 3 27 #"; '(- 5) -> (negE (numE 5))"
0 0 24 29 1 #"\n"
0 0 17 3 38 #"; '(* 5 3) -> (mulE (numE 5) (numE 3))"
0 0 24 29 1 #"\n"
0 0 17 3 38 #"; '(* 2 6) -> (mulE (numE 2) (numE 6))"
0 0 24 29 1 #"\n"
0 0 17 3 39 #"; '(** 5 3) -> (powE (numE 5) (numE 3))"
0 0 24 29 1 #"\n"
0 0 17 3 39 #"; '(** 2 6) -> (powE (numE 2) (numE 6))"
0 0 24 29 1 #"\n"
0 0 17 3 90
(
 #"; '(gtz 1 (** 5 3) (** 1 4)) -> (gtzE 1 (powE (numE 5) (numE 3)) (po"
 #"wE (numE 1) (numE 4)))"
) 0 0 24 29 1 #"\n"
0 0 17 3 91
(
 #"; '(gtz -1 (** 5 3) (** 1 4)) -> (gtzE 1 (powE (numE 5) (numE 3)) (p"
 #"owE (numE 1) (numE 4)))"
) 0           0 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"parseMyExpr"
0 0 24 3 2 #" ["
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 12 #"s-expression"
0 0 24 3 3 #"]) "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"myExpr"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 13 #"s-exp-number?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 2 #" ("
0 0 14 3 13 #"s-exp->number"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 13 #"s-exp-symbol?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #") ("
0 0 14 3 3 #"idE"
0 0 24 3 2 #" ("
0 0 14 3 13 #"s-exp->symbol"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 11 #"s-exp-list?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 2 #"sl"
0 0 24 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 4 #"case"
0 0 24 3 2 #" ("
0 0 14 3 13 #"s-exp->symbol"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 1 #"+"
0 0 24 3 3 #") ("
0 0 14 3 4 #"addE"
0 0 24 3 2 #" ("
0 0 14 3 11 #"parseMyExpr"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"parseMyExpr"
0 0 24 3 2 #" ("
0 0 14 3 5 #"third"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 1 #"*"
0 0 24 3 3 #") ("
0 0 14 3 4 #"mulE"
0 0 24 3 2 #" ("
0 0 14 3 11 #"parseMyExpr"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"parseMyExpr"
0 0 24 3 2 #" ("
0 0 14 3 5 #"third"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 2 #"**"
0 0 24 3 3 #") ("
0 0 14 3 4 #"powE"
0 0 24 3 2 #" ("
0 0 14 3 11 #"parseMyExpr"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"parseMyExpr"
0 0 24 3 2 #" ("
0 0 14 3 5 #"third"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 1 #"-"
0 0 24 3 3 #") ("
0 0 14 3 15 #"negHelperMyExpr"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 3 #"gtz"
0 0 24 3 3 #") ("
0 0 14 3 4 #"gtzE"
0 0 24 3 2 #" ("
0 0 14 3 13 #"s-exp->number"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"parseMyExpr"
0 0 24 3 2 #" ("
0 0 14 3 5 #"third"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"parseMyExpr"
0 0 24 3 2 #" ("
0 0 14 3 6 #"fourth"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 11 #"parseMyExpr"
0 0 24 3 1 #" "
0 0 19 3 20 #"\"invalid list input\""
0 0 24 3 5 #")]))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"parseSug"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"invalid input\""
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 7         121 4           0 0           0 19 0 17 3 51
#"; negHelperMyExpr : (listof s-expression) -> myExpr"
0 0 24 29 1 #"\n"
0 0 17 3 34 #"; Handles negative case for myExpr"
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; Examples"
0 0 24 29 1 #"\n"
0 0 17 3 45 #"; '(- 5 3) -> (addE (numE 5) (negE (numE 3)))"
0 0 24 29 1 #"\n"
0 0 17 3 27 #"; '(- 5) -> (negE (numE 5))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; Template"
0 0 24 29 1 #"\n"
0 0 17 3 65
#"; (define (negHelperMyExpr [sl : (listof s-expression)]) : myExpr"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";   (cond"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";     [(< (length sl) 3) (negE ...(second sl))"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";     [else (addE ...(second sl) (negE ...(third sl)))]))"
0           0 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"negHelperMyExpr"
0 0 24 3 2 #" ["
0 0 14 3 2 #"sl"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 24 3 1 #" "
0 0 14 3 12 #"s-expression"
0 0 24 3 4 #")]) "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"myExpr"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"negE"
0 0 24 3 2 #" ("
0 0 14 3 11 #"parseMyExpr"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"addE"
0 0 24 3 2 #" ("
0 0 14 3 11 #"parseMyExpr"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"negE"
0 0 24 3 2 #" ("
0 0 14 3 11 #"parseMyExpr"
0 0 24 3 2 #" ("
0 0 14 3 5 #"third"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 7 #"))))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"factorialHelper"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 3 #"acc"
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                           [("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 15 #"factorialHelper"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 3 #"acc"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 3 #"acc"
0 0 24 3 4 #"])))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"factorial"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 4 #"gtzE"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 2 #" ("
0 0 14 3 15 #"factorialHelper"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";;;;;;;;;; TESTS BELOW ;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";;Take Power Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 15 #"takePowerHelper"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 3 #"125"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 15 #"takePowerHelper"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"9"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 15 #"takePowerHelper"
0 0 24 3 1 #" "
0 0 21 3 2 #"-2"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 2 #"16"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 15 #"takePowerHelper"
0 0 24 3 1 #" "
0 0 21 3 2 #"-2"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 3 #"-32"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 15 #"takePowerHelper"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"takePower"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 3 #"125"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"takePower"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"9"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"takePower"
0 0 24 3 1 #" "
0 0 21 3 2 #"-2"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 2 #"16"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"takePower"
0 0 24 3 1 #" "
0 0 21 3 2 #"-2"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 3 #"-32"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 9 #"takePower"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; MinusHelper Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 11 #"minusHelper"
0 0 24 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 5 #"))) ("
0 0 14 3 6 #"negSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 11 #"minusHelper"
0 0 24 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 5 #"))) ("
0 0 14 3 6 #"subSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 11 #"minusHelper"
0 0 24 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 6 #")))) ("
0 0 14 3 6 #"subSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 6 #"negSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 11 #"minusHelper"
0 0 24 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 6 #")))) ("
0 0 14 3 6 #"subSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 6 #"subSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 11 #"minusHelper"
0 0 24 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 6 #")))) ("
0 0 14 3 6 #"negSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"subSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; NegHelperMyExpr"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 15 #"negHelperMyExpr"
0 0 24 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"addE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 4 #"negE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 15 #"negHelperMyExpr"
0 0 24 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"negE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; ParseSug Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 1 #" "
0 0 21 3 2 #"'4"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 1 #" "
0 0 21 3 2 #"'7"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 1 #" "
0 0 21 3 3 #"'12"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 1 #" "
0 0 21 3 3 #"'15"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 1 #" "
0 0 21 3 3 #"'20"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"addSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"addSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"addSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"addSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 2 #"26"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"addSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 2 #"26"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"subSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 2 #"42"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"subSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 2 #"42"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"subSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"subSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 2 #"26"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"subSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 2 #"26"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"negSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"negSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"negSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"negSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 2 #"26"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"negSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 2 #"26"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"mulSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"mulSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"mulSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"mulSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"26"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"mulSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 2 #"26"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 2 #"**"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"powSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 2 #"**"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"powSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 2 #"**"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"powSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 2 #"**"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"powSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 2 #"**"
0 0 24 3 1 #" "
0 0 21 3 2 #"26"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"powSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 2 #"26"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 5 #"))) ("
0 0 14 3 6 #"addSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 6 #"mulSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 2 #"**"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 6 #")))) ("
0 0 14 3 6 #"addSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 3 #") ("
0 0 14 3 6 #"negSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"powSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 7 #"))))) ("
0 0 14 3 6 #"mulSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 3 #") ("
0 0 14 3 6 #"addSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #") ("
0 0 14 3 6 #"addSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 6 #"negSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 2 #"**"
0 0 24 3 1 #" "
0 0 21 3 2 #"-5"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 5 #"))) ("
0 0 14 3 6 #"mulSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 6 #"powSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 2 #"-5"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 8 #"parseSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")) "
0 0 21 3 1 #"8"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"addSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"subSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #") ("
0 0 14 3 6 #"negSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 5 #"))) ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; Eval Tests "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 24 3 2 #" ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 4 #"))  "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 24 3 2 #" ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 4 #"))  "
0 0 21 3 1 #"7"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 24 3 2 #" ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 4 #"))  "
0 0 21 3 2 #"12"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 24 3 2 #" ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 3 #"-12"
0 0 24 3 4 #"))  "
0 0 21 3 3 #"-12"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 24 3 2 #" ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 4 #"))  "
0 0 21 3 2 #"25"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 24 3 2 #" ("
0 0 14 3 3 #"add"
0 0 24 3 2 #" ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"9"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 24 3 2 #" ("
0 0 14 3 3 #"add"
0 0 24 3 2 #" ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #") ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"15"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 24 3 2 #" ("
0 0 14 3 3 #"add"
0 0 24 3 2 #" ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"-3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 24 3 2 #" ("
0 0 14 3 3 #"add"
0 0 24 3 2 #" ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"8"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 24 3 2 #" ("
0 0 14 3 3 #"add"
0 0 24 3 2 #" ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 24 3 2 #" ("
0 0 14 3 3 #"neg"
0 0 24 3 2 #" ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"-5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 24 3 2 #" ("
0 0 14 3 3 #"neg"
0 0 24 3 2 #" ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 4 #"))) "
0 0 21 3 3 #"-10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 24 3 2 #" ("
0 0 14 3 3 #"neg"
0 0 24 3 2 #" ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 24 3 2 #" ("
0 0 14 3 3 #"neg"
0 0 24 3 2 #" ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 2 #"-2"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 24 3 2 #" ("
0 0 14 3 3 #"neg"
0 0 24 3 2 #" ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 4 #"-124"
0 0 24 3 4 #"))) "
0 0 21 3 3 #"124"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 24 3 2 #" ("
0 0 14 3 3 #"mul"
0 0 24 3 2 #" ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"20"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 24 3 2 #" ("
0 0 14 3 3 #"mul"
0 0 24 3 2 #" ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 3 #") ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"55"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 24 3 2 #" ("
0 0 14 3 3 #"mul"
0 0 24 3 2 #" ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"-4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 24 3 2 #" ("
0 0 14 3 3 #"mul"
0 0 24 3 2 #" ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 2 #"-2"
0 0 24 3 3 #") ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 2 #"-6"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"12"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 24 3 2 #" ("
0 0 14 3 3 #"mul"
0 0 24 3 2 #" ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 24 3 2 #" ("
0 0 14 3 3 #"pow"
0 0 24 3 2 #" ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 4 #"))) "
0 0 21 3 3 #"125"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 24 3 2 #" ("
0 0 14 3 3 #"pow"
0 0 24 3 2 #" ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 24 3 2 #" ("
0 0 14 3 3 #"pow"
0 0 24 3 2 #" ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 2 #"-3"
0 0 24 3 3 #") ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 4 #"))) "
0 0 21 3 3 #"-27"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 24 3 2 #" ("
0 0 14 3 3 #"pow"
0 0 24 3 2 #" ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 2 #"-2"
0 0 24 3 3 #") ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"64"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 24 3 2 #" ("
0 0 14 3 3 #"pow"
0 0 24 3 2 #" ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eval"
0 0 24 3 2 #" ("
0 0 14 3 3 #"add"
0 0 24 3 2 #" ("
0 0 14 3 3 #"add"
0 0 24 3 2 #" ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 4 #")) ("
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 2 #"35"
0 0 24 3 5 #")))  "
0 0 21 3 2 #"42"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";; EvalSug Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"evalSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 4 #"))  "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"evalSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 4 #"))  "
0 0 21 3 1 #"7"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"evalSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 4 #"))  "
0 0 21 3 2 #"12"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"evalSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 3 #"-12"
0 0 24 3 4 #"))  "
0 0 21 3 3 #"-12"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"evalSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 4 #"))  "
0 0 21 3 2 #"25"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"evalSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"addSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"9"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"evalSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"addSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"15"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"evalSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"addSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"-3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"evalSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"addSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"8"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"evalSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"addSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"evalSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"subSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"evalSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"subSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"evalSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"subSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"evalSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"subSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"-4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"evalSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"subSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"evalSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"negSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"-5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"evalSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"negSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 4 #"))) "
0 0 21 3 3 #"-10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"evalSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"negSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"evalSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"negSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 2 #"-2"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"evalSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"negSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 4 #"-124"
0 0 24 3 4 #"))) "
0 0 21 3 3 #"124"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"evalSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"mulSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"20"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"evalSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"mulSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"55"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"evalSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"mulSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"-4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"evalSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"mulSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 2 #"-2"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 2 #"-6"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"12"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"evalSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"mulSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"evalSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"powSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 4 #"))) "
0 0 21 3 3 #"125"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"evalSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"powSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"evalSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"powSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 2 #"-3"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 4 #"))) "
0 0 21 3 3 #"-27"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"evalSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"powSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 2 #"-2"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"64"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"evalSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"powSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 7 #"evalSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"addSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"addSug"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"numSug"
0 0 24 3 1 #" "
0 0 21 3 2 #"35"
0 0 24 3 5 #")))  "
0 0 21 3 2 #"42"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; EvalExpression Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 14 #"evalExpression"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")) "
0 0 21 3 1 #"8"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 14 #"evalExpression"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #")) "
0 0 21 3 1 #"7"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 14 #"evalExpression"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 2 #"-3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #")) "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 14 #"evalExpression"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #")) "
0 0 21 3 2 #"19"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 14 #"evalExpression"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 1 #" "
0 0 21 3 2 #"-5"
0 0 24 3 3 #")) "
0 0 21 3 2 #"-9"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 14 #"evalExpression"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")) "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 14 #"evalExpression"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #")) "
0 0 21 3 2 #"-1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 14 #"evalExpression"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 2 #"-3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #")) "
0 0 21 3 2 #"-7"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 14 #"evalExpression"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #")) "
0 0 21 3 1 #"7"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 14 #"evalExpression"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 1 #" "
0 0 21 3 2 #"-5"
0 0 24 3 3 #")) "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 14 #"evalExpression"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")) "
0 0 21 3 2 #"-5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 14 #"evalExpression"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 3 #")) "
0 0 21 3 3 #"-12"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 14 #"evalExpression"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 14 #"evalExpression"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 2 #"-5"
0 0 24 3 3 #")) "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 14 #"evalExpression"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 3 #"-12"
0 0 24 3 3 #")) "
0 0 21 3 2 #"12"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 14 #"evalExpression"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")) "
0 0 21 3 2 #"15"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 14 #"evalExpression"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #")) "
0 0 21 3 2 #"12"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 14 #"evalExpression"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"-3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #")) "
0 0 21 3 3 #"-12"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 14 #"evalExpression"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #")) "
0 0 21 3 2 #"18"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 14 #"evalExpression"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 1 #" "
0 0 21 3 2 #"-5"
0 0 24 3 3 #")) "
0 0 21 3 2 #"20"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 14 #"evalExpression"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 2 #"**"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")) "
0 0 21 3 3 #"125"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 14 #"evalExpression"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 2 #"**"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")) "
0 0 21 3 2 #"27"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 14 #"evalExpression"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 2 #"**"
0 0 24 3 1 #" "
0 0 21 3 2 #"-3"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")) "
0 0 21 3 3 #"-27"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 14 #"evalExpression"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 2 #"**"
0 0 24 3 1 #" "
0 0 21 3 2 #"-6"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")) "
0 0 21 3 2 #"36"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 14 #"evalExpression"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 2 #"**"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 14 #"evalExpression"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 5 #")))) "
0 0 21 3 2 #"16"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 14 #"evalExpression"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 2 #"**"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 5 #")))) "
0 0 21 3 3 #"-75"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 14 #"evalExpression"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"123"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 2 #"-5"
0 0 24 3 6 #"))))) "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 14 #"evalExpression"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 2 #"**"
0 0 24 3 1 #" "
0 0 21 3 2 #"-5"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 2 #"-2"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 2 #"24"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 14 #"evalExpression"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 2 #"**"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #" ("
0 0 14 3 2 #"**"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"1"
0 0 24 3 5 #")))) "
0 0 21 3 2 #"-5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; Subst Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 5 #"subst"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 4 #"powE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"powE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 5 #"subst"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 4 #"addE"
0 0 24 3 2 #" ("
0 0 14 3 3 #"idE"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 3 #"idE"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"addE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 5 #"subst"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 4 #"mulE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 3 #") ("
0 0 14 3 3 #"idE"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"mulE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; ParseMyExpr Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 11 #"parseMyExpr"
0 0 24 3 1 #" "
0 0 21 3 2 #"'5"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 11 #"parseMyExpr"
0 0 24 3 1 #" "
0 0 21 3 3 #"'-1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 11 #"parseMyExpr"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"addE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 11 #"parseMyExpr"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"addE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 4 #"negE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 11 #"parseMyExpr"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"negE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 11 #"parseMyExpr"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"addE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 11 #"parseMyExpr"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"mulE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 11 #"parseMyExpr"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"mulE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 11 #"parseMyExpr"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 2 #"**"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"powE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 11 #"parseMyExpr"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 2 #"**"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"powE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 11 #"parseMyExpr"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 3 #"gtz"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 2 #"**"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 2 #"**"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"gtzE"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"powE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"powE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 11 #"parseMyExpr"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 3 #"gtz"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 2 #" ("
0 0 14 3 2 #"**"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 2 #"**"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 5 #"))) ("
0 0 14 3 4 #"gtzE"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"powE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"powE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; GreaterThanZeroHelper Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 21 #"greaterThanZeroHelper"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 21 #"greaterThanZeroHelper"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"addE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"addE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 21 #"greaterThanZeroHelper"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"addE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 21 #"greaterThanZeroHelper"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 21 #"greaterThanZeroHelper"
0 0 24 3 2 #" ("
0 0 14 3 4 #"addE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 21 #"greaterThanZeroHelper"
0 0 24 3 2 #" ("
0 0 14 3 4 #"mulE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 2 #"23"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; Interp and GTZ Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 14 3 6 #"mt-env"
0 0 24 3 1 #" "
0 0 14 3 8 #"funcList"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 2 #"-5"
0 0 24 3 2 #") "
0 0 14 3 6 #"mt-env"
0 0 24 3 1 #" "
0 0 14 3 8 #"funcList"
0 0 24 3 2 #") "
0 0 21 3 2 #"-5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 2 #" ("
0 0 14 3 4 #"appE"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"addFunc"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 4 #"))) "
0 0 14 3 6 #"mt-env"
0 0 24 3 1 #" "
0 0 14 3 8 #"funcList"
0 0 24 3 2 #") "
0 0 21 3 1 #"9"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 2 #" ("
0 0 14 3 4 #"addE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #")) "
0 0 14 3 6 #"mt-env"
0 0 24 3 1 #" "
0 0 14 3 8 #"funcList"
0 0 24 3 2 #") "
0 0 21 3 2 #"11"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 2 #" ("
0 0 14 3 4 #"addE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 2 #"-3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")) "
0 0 14 3 6 #"mt-env"
0 0 24 3 1 #" "
0 0 14 3 8 #"funcList"
0 0 24 3 2 #") "
0 0 21 3 2 #"-1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 2 #" ("
0 0 14 3 4 #"mulE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #")) "
0 0 14 3 6 #"mt-env"
0 0 24 3 1 #" "
0 0 14 3 8 #"funcList"
0 0 24 3 2 #") "
0 0 21 3 2 #"30"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 2 #" ("
0 0 14 3 4 #"mulE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 2 #"-3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")) "
0 0 14 3 6 #"mt-env"
0 0 24 3 1 #" "
0 0 14 3 8 #"funcList"
0 0 24 3 2 #") "
0 0 21 3 2 #"-6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 2 #" ("
0 0 14 3 4 #"negE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")) "
0 0 14 3 6 #"mt-env"
0 0 24 3 1 #" "
0 0 14 3 8 #"funcList"
0 0 24 3 2 #") "
0 0 21 3 2 #"-5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 2 #" ("
0 0 14 3 4 #"negE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 2 #"-3"
0 0 24 3 3 #")) "
0 0 14 3 6 #"mt-env"
0 0 24 3 1 #" "
0 0 14 3 8 #"funcList"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 2 #" ("
0 0 14 3 4 #"negE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #")) "
0 0 14 3 6 #"mt-env"
0 0 24 3 1 #" "
0 0 14 3 8 #"funcList"
0 0 24 3 2 #") "
0 0 21 3 3 #"-20"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 2 #" ("
0 0 14 3 4 #"powE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")) "
0 0 14 3 6 #"mt-env"
0 0 24 3 1 #" "
0 0 14 3 8 #"funcList"
0 0 24 3 2 #") "
0 0 21 3 2 #"16"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 2 #" ("
0 0 14 3 4 #"powE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 2 #"-3"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")) "
0 0 14 3 6 #"mt-env"
0 0 24 3 1 #" "
0 0 14 3 8 #"funcList"
0 0 24 3 2 #") "
0 0 21 3 3 #"-27"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 3 #" (("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #") ("
0 0 14 3 4 #"addE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"appE"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"addFunc"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #")) "
0 0 14 3 1 #"y"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #")) "
0 0 14 3 6 #"mt-env"
0 0 24 3 1 #" "
0 0 14 3 8 #"funcList"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 2 #" ("
0 0 14 3 4 #"gtzE"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"powE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"mulE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 4 #"))) "
0 0 14 3 6 #"mt-env"
0 0 24 3 1 #" "
0 0 14 3 8 #"funcList"
0 0 24 3 2 #") "
0 0 21 3 2 #"16"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 2 #" ("
0 0 14 3 4 #"gtzE"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"powE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"mulE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 4 #"))) "
0 0 14 3 6 #"mt-env"
0 0 24 3 1 #" "
0 0 14 3 8 #"funcList"
0 0 24 3 2 #") "
0 0 21 3 2 #"30"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 14 #"evalExpression"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 3 #"gtz"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 14 #"evalExpression"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 3 #"gtz"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 14 #"evalExpression"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 3 #"gtz"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"7"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 14 #"evalExpression"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 3 #"gtz"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"24"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; Project 6 Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 2 #" ("
0 0 14 3 4 #"addE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #") ("
0 0 14 3 4 #"appE"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"double"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"addE"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"numE"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 14 3 6 #"mt-env"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"fdef"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"double"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"y"
0 0 24 3 3 #") ("
0 0 14 3 4 #"addE"
0 0 24 3 2 #" ("
0 0 14 3 3 #"idE"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 3 #"idE"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"y"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 21 3 2 #"20"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0           0
